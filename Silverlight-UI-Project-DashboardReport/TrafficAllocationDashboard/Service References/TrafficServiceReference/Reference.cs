//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace TrafficAllocationDashboard.TrafficServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkViewSlicesData", Namespace="http://schemas.datacontract.org/2004/07/TrafficAllocation.Model.Entities")]
    public partial class NetworkViewSlicesData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ActuallViewNameField;
        
        private string ViewNameField;
        
        private string ViewSliceNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActuallViewName {
            get {
                return this.ActuallViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActuallViewNameField, value) != true)) {
                    this.ActuallViewNameField = value;
                    this.RaisePropertyChanged("ActuallViewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewName {
            get {
                return this.ViewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewNameField, value) != true)) {
                    this.ViewNameField = value;
                    this.RaisePropertyChanged("ViewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViewSliceName {
            get {
                return this.ViewSliceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewSliceNameField, value) != true)) {
                    this.ViewSliceNameField = value;
                    this.RaisePropertyChanged("ViewSliceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlightCubeData", Namespace="http://schemas.datacontract.org/2004/07/TrafficAllocation.Model.Entities")]
    public partial class FlightCubeData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double ClickYieldField;
        
        private int ClicksField;
        
        private string CountryField;
        
        private System.DateTime DateField;
        
        private string DeviceField;
        
        private string EnvironmentTypeField;
        
        private string ExperimentAuthorField;
        
        private string ExperimentNameField;
        
        private string ExperimentTypeField;
        
        private string FeatureAreaTypeField;
        
        private int FlightNoField;
        
        private double GrossRevenueUSDField;
        
        private double ImpressionYieldField;
        
        private int ImpressionsField;
        
        private System.DateTime LastRefreshedField;
        
        private string MediumField;
        
        private System.DateTime ModifiedDateField;
        
        private string NetworkField;
        
        private string PagePlacementField;
        
        private string PartnerField;
        
        private double RPMField;
        
        private int SrpvField;
        
        private System.DateTime StartDateField;
        
        private string TrafficTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ClickYield {
            get {
                return this.ClickYieldField;
            }
            set {
                if ((this.ClickYieldField.Equals(value) != true)) {
                    this.ClickYieldField = value;
                    this.RaisePropertyChanged("ClickYield");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Clicks {
            get {
                return this.ClicksField;
            }
            set {
                if ((this.ClicksField.Equals(value) != true)) {
                    this.ClicksField = value;
                    this.RaisePropertyChanged("Clicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Device {
            get {
                return this.DeviceField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceField, value) != true)) {
                    this.DeviceField = value;
                    this.RaisePropertyChanged("Device");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnvironmentType {
            get {
                return this.EnvironmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EnvironmentTypeField, value) != true)) {
                    this.EnvironmentTypeField = value;
                    this.RaisePropertyChanged("EnvironmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentAuthor {
            get {
                return this.ExperimentAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentAuthorField, value) != true)) {
                    this.ExperimentAuthorField = value;
                    this.RaisePropertyChanged("ExperimentAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentName {
            get {
                return this.ExperimentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentNameField, value) != true)) {
                    this.ExperimentNameField = value;
                    this.RaisePropertyChanged("ExperimentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentType {
            get {
                return this.ExperimentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentTypeField, value) != true)) {
                    this.ExperimentTypeField = value;
                    this.RaisePropertyChanged("ExperimentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureAreaType {
            get {
                return this.FeatureAreaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureAreaTypeField, value) != true)) {
                    this.FeatureAreaTypeField = value;
                    this.RaisePropertyChanged("FeatureAreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((this.FlightNoField.Equals(value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossRevenueUSD {
            get {
                return this.GrossRevenueUSDField;
            }
            set {
                if ((this.GrossRevenueUSDField.Equals(value) != true)) {
                    this.GrossRevenueUSDField = value;
                    this.RaisePropertyChanged("GrossRevenueUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImpressionYield {
            get {
                return this.ImpressionYieldField;
            }
            set {
                if ((this.ImpressionYieldField.Equals(value) != true)) {
                    this.ImpressionYieldField = value;
                    this.RaisePropertyChanged("ImpressionYield");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Impressions {
            get {
                return this.ImpressionsField;
            }
            set {
                if ((this.ImpressionsField.Equals(value) != true)) {
                    this.ImpressionsField = value;
                    this.RaisePropertyChanged("Impressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastRefreshed {
            get {
                return this.LastRefreshedField;
            }
            set {
                if ((this.LastRefreshedField.Equals(value) != true)) {
                    this.LastRefreshedField = value;
                    this.RaisePropertyChanged("LastRefreshed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medium {
            get {
                return this.MediumField;
            }
            set {
                if ((object.ReferenceEquals(this.MediumField, value) != true)) {
                    this.MediumField = value;
                    this.RaisePropertyChanged("Medium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Network {
            get {
                return this.NetworkField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkField, value) != true)) {
                    this.NetworkField = value;
                    this.RaisePropertyChanged("Network");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PagePlacement {
            get {
                return this.PagePlacementField;
            }
            set {
                if ((object.ReferenceEquals(this.PagePlacementField, value) != true)) {
                    this.PagePlacementField = value;
                    this.RaisePropertyChanged("PagePlacement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Partner {
            get {
                return this.PartnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerField, value) != true)) {
                    this.PartnerField = value;
                    this.RaisePropertyChanged("Partner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RPM {
            get {
                return this.RPMField;
            }
            set {
                if ((this.RPMField.Equals(value) != true)) {
                    this.RPMField = value;
                    this.RaisePropertyChanged("RPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Srpv {
            get {
                return this.SrpvField;
            }
            set {
                if ((this.SrpvField.Equals(value) != true)) {
                    this.SrpvField = value;
                    this.RaisePropertyChanged("Srpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrafficType {
            get {
                return this.TrafficTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrafficTypeField, value) != true)) {
                    this.TrafficTypeField = value;
                    this.RaisePropertyChanged("TrafficType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentViewData", Namespace="http://schemas.datacontract.org/2004/07/TrafficAllocation.Model.Entities")]
    public partial class CurrentViewData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AllocationField;
        
        private double CYField;
        
        private double ClicksField;
        
        private double ControlFlightCYField;
        
        private double ControlFlightClicksField;
        
        private double ControlFlightIYField;
        
        private double ControlFlightImpressionsField;
        
        private double ControlFlightMLCYField;
        
        private double ControlFlightMLIYField;
        
        private int ControlFlightNoField;
        
        private double ControlFlightRPSField;
        
        private double ControlFlightRevenueField;
        
        private System.DateTime DateField;
        
        private int DaysRunningField;
        
        private string EnvironmentTypeField;
        
        private string ExperimentAuthorField;
        
        private string ExperimentNameField;
        
        private string ExperimentTypeField;
        
        private string FeatureAreaTypeField;
        
        private double FlightCYField;
        
        private double FlightClicksField;
        
        private double FlightIYField;
        
        private double FlightImpressionsField;
        
        private double FlightMLCYField;
        
        private double FlightMLIYField;
        
        private int FlightNoField;
        
        private double FlightRPSField;
        
        private double FlightRevenueField;
        
        private int FlightSRPVsField;
        
        private double GrossRevenueUSDField;
        
        private double IYField;
        
        private int ImpressionsField;
        
        private System.DateTime LastModifiedDateField;
        
        private System.DateTime LastRefreshedField;
        
        private double MLCYField;
        
        private double MLIYField;
        
        private double MainlineImpressionField;
        
        private int PeriodSRPVsField;
        
        private double RPSField;
        
        private double RevenueContributionField;
        
        private int SrpvField;
        
        private double TotalSrpvField;
        
        private string TrafficTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Allocation {
            get {
                return this.AllocationField;
            }
            set {
                if ((this.AllocationField.Equals(value) != true)) {
                    this.AllocationField = value;
                    this.RaisePropertyChanged("Allocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CY {
            get {
                return this.CYField;
            }
            set {
                if ((this.CYField.Equals(value) != true)) {
                    this.CYField = value;
                    this.RaisePropertyChanged("CY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Clicks {
            get {
                return this.ClicksField;
            }
            set {
                if ((this.ClicksField.Equals(value) != true)) {
                    this.ClicksField = value;
                    this.RaisePropertyChanged("Clicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlFlightCY {
            get {
                return this.ControlFlightCYField;
            }
            set {
                if ((this.ControlFlightCYField.Equals(value) != true)) {
                    this.ControlFlightCYField = value;
                    this.RaisePropertyChanged("ControlFlightCY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlFlightClicks {
            get {
                return this.ControlFlightClicksField;
            }
            set {
                if ((this.ControlFlightClicksField.Equals(value) != true)) {
                    this.ControlFlightClicksField = value;
                    this.RaisePropertyChanged("ControlFlightClicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlFlightIY {
            get {
                return this.ControlFlightIYField;
            }
            set {
                if ((this.ControlFlightIYField.Equals(value) != true)) {
                    this.ControlFlightIYField = value;
                    this.RaisePropertyChanged("ControlFlightIY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlFlightImpressions {
            get {
                return this.ControlFlightImpressionsField;
            }
            set {
                if ((this.ControlFlightImpressionsField.Equals(value) != true)) {
                    this.ControlFlightImpressionsField = value;
                    this.RaisePropertyChanged("ControlFlightImpressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlFlightMLCY {
            get {
                return this.ControlFlightMLCYField;
            }
            set {
                if ((this.ControlFlightMLCYField.Equals(value) != true)) {
                    this.ControlFlightMLCYField = value;
                    this.RaisePropertyChanged("ControlFlightMLCY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlFlightMLIY {
            get {
                return this.ControlFlightMLIYField;
            }
            set {
                if ((this.ControlFlightMLIYField.Equals(value) != true)) {
                    this.ControlFlightMLIYField = value;
                    this.RaisePropertyChanged("ControlFlightMLIY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ControlFlightNo {
            get {
                return this.ControlFlightNoField;
            }
            set {
                if ((this.ControlFlightNoField.Equals(value) != true)) {
                    this.ControlFlightNoField = value;
                    this.RaisePropertyChanged("ControlFlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlFlightRPS {
            get {
                return this.ControlFlightRPSField;
            }
            set {
                if ((this.ControlFlightRPSField.Equals(value) != true)) {
                    this.ControlFlightRPSField = value;
                    this.RaisePropertyChanged("ControlFlightRPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlFlightRevenue {
            get {
                return this.ControlFlightRevenueField;
            }
            set {
                if ((this.ControlFlightRevenueField.Equals(value) != true)) {
                    this.ControlFlightRevenueField = value;
                    this.RaisePropertyChanged("ControlFlightRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysRunning {
            get {
                return this.DaysRunningField;
            }
            set {
                if ((this.DaysRunningField.Equals(value) != true)) {
                    this.DaysRunningField = value;
                    this.RaisePropertyChanged("DaysRunning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnvironmentType {
            get {
                return this.EnvironmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EnvironmentTypeField, value) != true)) {
                    this.EnvironmentTypeField = value;
                    this.RaisePropertyChanged("EnvironmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentAuthor {
            get {
                return this.ExperimentAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentAuthorField, value) != true)) {
                    this.ExperimentAuthorField = value;
                    this.RaisePropertyChanged("ExperimentAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentName {
            get {
                return this.ExperimentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentNameField, value) != true)) {
                    this.ExperimentNameField = value;
                    this.RaisePropertyChanged("ExperimentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentType {
            get {
                return this.ExperimentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentTypeField, value) != true)) {
                    this.ExperimentTypeField = value;
                    this.RaisePropertyChanged("ExperimentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureAreaType {
            get {
                return this.FeatureAreaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureAreaTypeField, value) != true)) {
                    this.FeatureAreaTypeField = value;
                    this.RaisePropertyChanged("FeatureAreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FlightCY {
            get {
                return this.FlightCYField;
            }
            set {
                if ((this.FlightCYField.Equals(value) != true)) {
                    this.FlightCYField = value;
                    this.RaisePropertyChanged("FlightCY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FlightClicks {
            get {
                return this.FlightClicksField;
            }
            set {
                if ((this.FlightClicksField.Equals(value) != true)) {
                    this.FlightClicksField = value;
                    this.RaisePropertyChanged("FlightClicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FlightIY {
            get {
                return this.FlightIYField;
            }
            set {
                if ((this.FlightIYField.Equals(value) != true)) {
                    this.FlightIYField = value;
                    this.RaisePropertyChanged("FlightIY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FlightImpressions {
            get {
                return this.FlightImpressionsField;
            }
            set {
                if ((this.FlightImpressionsField.Equals(value) != true)) {
                    this.FlightImpressionsField = value;
                    this.RaisePropertyChanged("FlightImpressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FlightMLCY {
            get {
                return this.FlightMLCYField;
            }
            set {
                if ((this.FlightMLCYField.Equals(value) != true)) {
                    this.FlightMLCYField = value;
                    this.RaisePropertyChanged("FlightMLCY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FlightMLIY {
            get {
                return this.FlightMLIYField;
            }
            set {
                if ((this.FlightMLIYField.Equals(value) != true)) {
                    this.FlightMLIYField = value;
                    this.RaisePropertyChanged("FlightMLIY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((this.FlightNoField.Equals(value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FlightRPS {
            get {
                return this.FlightRPSField;
            }
            set {
                if ((this.FlightRPSField.Equals(value) != true)) {
                    this.FlightRPSField = value;
                    this.RaisePropertyChanged("FlightRPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FlightRevenue {
            get {
                return this.FlightRevenueField;
            }
            set {
                if ((this.FlightRevenueField.Equals(value) != true)) {
                    this.FlightRevenueField = value;
                    this.RaisePropertyChanged("FlightRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightSRPVs {
            get {
                return this.FlightSRPVsField;
            }
            set {
                if ((this.FlightSRPVsField.Equals(value) != true)) {
                    this.FlightSRPVsField = value;
                    this.RaisePropertyChanged("FlightSRPVs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossRevenueUSD {
            get {
                return this.GrossRevenueUSDField;
            }
            set {
                if ((this.GrossRevenueUSDField.Equals(value) != true)) {
                    this.GrossRevenueUSDField = value;
                    this.RaisePropertyChanged("GrossRevenueUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double IY {
            get {
                return this.IYField;
            }
            set {
                if ((this.IYField.Equals(value) != true)) {
                    this.IYField = value;
                    this.RaisePropertyChanged("IY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Impressions {
            get {
                return this.ImpressionsField;
            }
            set {
                if ((this.ImpressionsField.Equals(value) != true)) {
                    this.ImpressionsField = value;
                    this.RaisePropertyChanged("Impressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastRefreshed {
            get {
                return this.LastRefreshedField;
            }
            set {
                if ((this.LastRefreshedField.Equals(value) != true)) {
                    this.LastRefreshedField = value;
                    this.RaisePropertyChanged("LastRefreshed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MLCY {
            get {
                return this.MLCYField;
            }
            set {
                if ((this.MLCYField.Equals(value) != true)) {
                    this.MLCYField = value;
                    this.RaisePropertyChanged("MLCY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MLIY {
            get {
                return this.MLIYField;
            }
            set {
                if ((this.MLIYField.Equals(value) != true)) {
                    this.MLIYField = value;
                    this.RaisePropertyChanged("MLIY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MainlineImpression {
            get {
                return this.MainlineImpressionField;
            }
            set {
                if ((this.MainlineImpressionField.Equals(value) != true)) {
                    this.MainlineImpressionField = value;
                    this.RaisePropertyChanged("MainlineImpression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PeriodSRPVs {
            get {
                return this.PeriodSRPVsField;
            }
            set {
                if ((this.PeriodSRPVsField.Equals(value) != true)) {
                    this.PeriodSRPVsField = value;
                    this.RaisePropertyChanged("PeriodSRPVs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RPS {
            get {
                return this.RPSField;
            }
            set {
                if ((this.RPSField.Equals(value) != true)) {
                    this.RPSField = value;
                    this.RaisePropertyChanged("RPS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RevenueContribution {
            get {
                return this.RevenueContributionField;
            }
            set {
                if ((this.RevenueContributionField.Equals(value) != true)) {
                    this.RevenueContributionField = value;
                    this.RaisePropertyChanged("RevenueContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Srpv {
            get {
                return this.SrpvField;
            }
            set {
                if ((this.SrpvField.Equals(value) != true)) {
                    this.SrpvField = value;
                    this.RaisePropertyChanged("Srpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSrpv {
            get {
                return this.TotalSrpvField;
            }
            set {
                if ((this.TotalSrpvField.Equals(value) != true)) {
                    this.TotalSrpvField = value;
                    this.RaisePropertyChanged("TotalSrpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrafficType {
            get {
                return this.TrafficTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrafficTypeField, value) != true)) {
                    this.TrafficTypeField = value;
                    this.RaisePropertyChanged("TrafficType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExperimentAllocationData", Namespace="http://schemas.datacontract.org/2004/07/TrafficAllocation.Model.Entities")]
    public partial class ExperimentAllocationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AllocationBudgetField;
        
        private int ClicksField;
        
        private System.DateTime DateField;
        
        private double ExperimentAllocationField;
        
        private string ExperimentNameField;
        
        private int FlightNoField;
        
        private double GrossRevenueUSDField;
        
        private int ImpressionsField;
        
        private System.DateTime LastRefreshedField;
        
        private int SrpvField;
        
        private double TotalSrpvField;
        
        private string TrafficTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AllocationBudget {
            get {
                return this.AllocationBudgetField;
            }
            set {
                if ((this.AllocationBudgetField.Equals(value) != true)) {
                    this.AllocationBudgetField = value;
                    this.RaisePropertyChanged("AllocationBudget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Clicks {
            get {
                return this.ClicksField;
            }
            set {
                if ((this.ClicksField.Equals(value) != true)) {
                    this.ClicksField = value;
                    this.RaisePropertyChanged("Clicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ExperimentAllocation {
            get {
                return this.ExperimentAllocationField;
            }
            set {
                if ((this.ExperimentAllocationField.Equals(value) != true)) {
                    this.ExperimentAllocationField = value;
                    this.RaisePropertyChanged("ExperimentAllocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentName {
            get {
                return this.ExperimentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentNameField, value) != true)) {
                    this.ExperimentNameField = value;
                    this.RaisePropertyChanged("ExperimentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((this.FlightNoField.Equals(value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossRevenueUSD {
            get {
                return this.GrossRevenueUSDField;
            }
            set {
                if ((this.GrossRevenueUSDField.Equals(value) != true)) {
                    this.GrossRevenueUSDField = value;
                    this.RaisePropertyChanged("GrossRevenueUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Impressions {
            get {
                return this.ImpressionsField;
            }
            set {
                if ((this.ImpressionsField.Equals(value) != true)) {
                    this.ImpressionsField = value;
                    this.RaisePropertyChanged("Impressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastRefreshed {
            get {
                return this.LastRefreshedField;
            }
            set {
                if ((this.LastRefreshedField.Equals(value) != true)) {
                    this.LastRefreshedField = value;
                    this.RaisePropertyChanged("LastRefreshed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Srpv {
            get {
                return this.SrpvField;
            }
            set {
                if ((this.SrpvField.Equals(value) != true)) {
                    this.SrpvField = value;
                    this.RaisePropertyChanged("Srpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSrpv {
            get {
                return this.TotalSrpvField;
            }
            set {
                if ((this.TotalSrpvField.Equals(value) != true)) {
                    this.TotalSrpvField = value;
                    this.RaisePropertyChanged("TotalSrpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrafficType {
            get {
                return this.TrafficTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrafficTypeField, value) != true)) {
                    this.TrafficTypeField = value;
                    this.RaisePropertyChanged("TrafficType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RPSContributionData", Namespace="http://schemas.datacontract.org/2004/07/TrafficAllocation.Model.Entities")]
    public partial class RPSContributionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AdjustedRPMField;
        
        private double AdjustedRevenueField;
        
        private int ClicksField;
        
        private double ControlRPMField;
        
        private System.DateTime DateField;
        
        private string ExperimentNameField;
        
        private string FeatureAreaTypeField;
        
        private int FlightNoField;
        
        private double GrossRevenueUSDField;
        
        private int ImpressionsField;
        
        private System.DateTime LastRefreshedField;
        
        private double RPMField;
        
        private double RPMControlField;
        
        private double RevenueContributionField;
        
        private double RevenueDeltaField;
        
        private double RpmDeltaField;
        
        private double RpsContributionField;
        
        private int SrpvField;
        
        private double TotalRevenueField;
        
        private double TotalSrpvField;
        
        private string TrafficTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedRPM {
            get {
                return this.AdjustedRPMField;
            }
            set {
                if ((this.AdjustedRPMField.Equals(value) != true)) {
                    this.AdjustedRPMField = value;
                    this.RaisePropertyChanged("AdjustedRPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedRevenue {
            get {
                return this.AdjustedRevenueField;
            }
            set {
                if ((this.AdjustedRevenueField.Equals(value) != true)) {
                    this.AdjustedRevenueField = value;
                    this.RaisePropertyChanged("AdjustedRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Clicks {
            get {
                return this.ClicksField;
            }
            set {
                if ((this.ClicksField.Equals(value) != true)) {
                    this.ClicksField = value;
                    this.RaisePropertyChanged("Clicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ControlRPM {
            get {
                return this.ControlRPMField;
            }
            set {
                if ((this.ControlRPMField.Equals(value) != true)) {
                    this.ControlRPMField = value;
                    this.RaisePropertyChanged("ControlRPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentName {
            get {
                return this.ExperimentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentNameField, value) != true)) {
                    this.ExperimentNameField = value;
                    this.RaisePropertyChanged("ExperimentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureAreaType {
            get {
                return this.FeatureAreaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureAreaTypeField, value) != true)) {
                    this.FeatureAreaTypeField = value;
                    this.RaisePropertyChanged("FeatureAreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((this.FlightNoField.Equals(value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossRevenueUSD {
            get {
                return this.GrossRevenueUSDField;
            }
            set {
                if ((this.GrossRevenueUSDField.Equals(value) != true)) {
                    this.GrossRevenueUSDField = value;
                    this.RaisePropertyChanged("GrossRevenueUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Impressions {
            get {
                return this.ImpressionsField;
            }
            set {
                if ((this.ImpressionsField.Equals(value) != true)) {
                    this.ImpressionsField = value;
                    this.RaisePropertyChanged("Impressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastRefreshed {
            get {
                return this.LastRefreshedField;
            }
            set {
                if ((this.LastRefreshedField.Equals(value) != true)) {
                    this.LastRefreshedField = value;
                    this.RaisePropertyChanged("LastRefreshed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RPM {
            get {
                return this.RPMField;
            }
            set {
                if ((this.RPMField.Equals(value) != true)) {
                    this.RPMField = value;
                    this.RaisePropertyChanged("RPM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RPMControl {
            get {
                return this.RPMControlField;
            }
            set {
                if ((this.RPMControlField.Equals(value) != true)) {
                    this.RPMControlField = value;
                    this.RaisePropertyChanged("RPMControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RevenueContribution {
            get {
                return this.RevenueContributionField;
            }
            set {
                if ((this.RevenueContributionField.Equals(value) != true)) {
                    this.RevenueContributionField = value;
                    this.RaisePropertyChanged("RevenueContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RevenueDelta {
            get {
                return this.RevenueDeltaField;
            }
            set {
                if ((this.RevenueDeltaField.Equals(value) != true)) {
                    this.RevenueDeltaField = value;
                    this.RaisePropertyChanged("RevenueDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RpmDelta {
            get {
                return this.RpmDeltaField;
            }
            set {
                if ((this.RpmDeltaField.Equals(value) != true)) {
                    this.RpmDeltaField = value;
                    this.RaisePropertyChanged("RpmDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RpsContribution {
            get {
                return this.RpsContributionField;
            }
            set {
                if ((this.RpsContributionField.Equals(value) != true)) {
                    this.RpsContributionField = value;
                    this.RaisePropertyChanged("RpsContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Srpv {
            get {
                return this.SrpvField;
            }
            set {
                if ((this.SrpvField.Equals(value) != true)) {
                    this.SrpvField = value;
                    this.RaisePropertyChanged("Srpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalRevenue {
            get {
                return this.TotalRevenueField;
            }
            set {
                if ((this.TotalRevenueField.Equals(value) != true)) {
                    this.TotalRevenueField = value;
                    this.RaisePropertyChanged("TotalRevenue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSrpv {
            get {
                return this.TotalSrpvField;
            }
            set {
                if ((this.TotalSrpvField.Equals(value) != true)) {
                    this.TotalSrpvField = value;
                    this.RaisePropertyChanged("TotalSrpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrafficType {
            get {
                return this.TrafficTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrafficTypeField, value) != true)) {
                    this.TrafficTypeField = value;
                    this.RaisePropertyChanged("TrafficType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MLIYContributionData", Namespace="http://schemas.datacontract.org/2004/07/TrafficAllocation.Model.Entities")]
    public partial class MLIYContributionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AdjustedMLIYDeltaField;
        
        private double AdjustedMainlineImpressionsField;
        
        private System.DateTime DateField;
        
        private string ExperimentNameField;
        
        private string FeatureAreaTypeField;
        
        private int FlightNoField;
        
        private double GrossRevenueUSDField;
        
        private double ImpressionYieldField;
        
        private int ImpressionsField;
        
        private System.DateTime LastRefreshedField;
        
        private double MLIYContributionField;
        
        private double MLIYControlField;
        
        private double MLIYDeltaField;
        
        private double MainlineImpressionsField;
        
        private int SrpvField;
        
        private double TotalSrpvField;
        
        private string TrafficTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedMLIYDelta {
            get {
                return this.AdjustedMLIYDeltaField;
            }
            set {
                if ((this.AdjustedMLIYDeltaField.Equals(value) != true)) {
                    this.AdjustedMLIYDeltaField = value;
                    this.RaisePropertyChanged("AdjustedMLIYDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedMainlineImpressions {
            get {
                return this.AdjustedMainlineImpressionsField;
            }
            set {
                if ((this.AdjustedMainlineImpressionsField.Equals(value) != true)) {
                    this.AdjustedMainlineImpressionsField = value;
                    this.RaisePropertyChanged("AdjustedMainlineImpressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentName {
            get {
                return this.ExperimentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentNameField, value) != true)) {
                    this.ExperimentNameField = value;
                    this.RaisePropertyChanged("ExperimentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureAreaType {
            get {
                return this.FeatureAreaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureAreaTypeField, value) != true)) {
                    this.FeatureAreaTypeField = value;
                    this.RaisePropertyChanged("FeatureAreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((this.FlightNoField.Equals(value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossRevenueUSD {
            get {
                return this.GrossRevenueUSDField;
            }
            set {
                if ((this.GrossRevenueUSDField.Equals(value) != true)) {
                    this.GrossRevenueUSDField = value;
                    this.RaisePropertyChanged("GrossRevenueUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImpressionYield {
            get {
                return this.ImpressionYieldField;
            }
            set {
                if ((this.ImpressionYieldField.Equals(value) != true)) {
                    this.ImpressionYieldField = value;
                    this.RaisePropertyChanged("ImpressionYield");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Impressions {
            get {
                return this.ImpressionsField;
            }
            set {
                if ((this.ImpressionsField.Equals(value) != true)) {
                    this.ImpressionsField = value;
                    this.RaisePropertyChanged("Impressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastRefreshed {
            get {
                return this.LastRefreshedField;
            }
            set {
                if ((this.LastRefreshedField.Equals(value) != true)) {
                    this.LastRefreshedField = value;
                    this.RaisePropertyChanged("LastRefreshed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MLIYContribution {
            get {
                return this.MLIYContributionField;
            }
            set {
                if ((this.MLIYContributionField.Equals(value) != true)) {
                    this.MLIYContributionField = value;
                    this.RaisePropertyChanged("MLIYContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MLIYControl {
            get {
                return this.MLIYControlField;
            }
            set {
                if ((this.MLIYControlField.Equals(value) != true)) {
                    this.MLIYControlField = value;
                    this.RaisePropertyChanged("MLIYControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MLIYDelta {
            get {
                return this.MLIYDeltaField;
            }
            set {
                if ((this.MLIYDeltaField.Equals(value) != true)) {
                    this.MLIYDeltaField = value;
                    this.RaisePropertyChanged("MLIYDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MainlineImpressions {
            get {
                return this.MainlineImpressionsField;
            }
            set {
                if ((this.MainlineImpressionsField.Equals(value) != true)) {
                    this.MainlineImpressionsField = value;
                    this.RaisePropertyChanged("MainlineImpressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Srpv {
            get {
                return this.SrpvField;
            }
            set {
                if ((this.SrpvField.Equals(value) != true)) {
                    this.SrpvField = value;
                    this.RaisePropertyChanged("Srpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSrpv {
            get {
                return this.TotalSrpvField;
            }
            set {
                if ((this.TotalSrpvField.Equals(value) != true)) {
                    this.TotalSrpvField = value;
                    this.RaisePropertyChanged("TotalSrpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrafficType {
            get {
                return this.TrafficTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrafficTypeField, value) != true)) {
                    this.TrafficTypeField = value;
                    this.RaisePropertyChanged("TrafficType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MLCYContributionData", Namespace="http://schemas.datacontract.org/2004/07/TrafficAllocation.Model.Entities")]
    public partial class MLCYContributionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AdjustedMLCYDeltaField;
        
        private double AdjustedMainlineClicksField;
        
        private double ClickYieldField;
        
        private int ClicksField;
        
        private System.DateTime DateField;
        
        private string ExperimentNameField;
        
        private string FeatureAreaTypeField;
        
        private int FlightNoField;
        
        private double GrossRevenueUSDField;
        
        private System.DateTime LastRefreshedField;
        
        private double MLCYContributionField;
        
        private double MLCYControlField;
        
        private double MLCYDeltaField;
        
        private double MainlineClicksField;
        
        private int SrpvField;
        
        private double TotalSrpvField;
        
        private string TrafficTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedMLCYDelta {
            get {
                return this.AdjustedMLCYDeltaField;
            }
            set {
                if ((this.AdjustedMLCYDeltaField.Equals(value) != true)) {
                    this.AdjustedMLCYDeltaField = value;
                    this.RaisePropertyChanged("AdjustedMLCYDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedMainlineClicks {
            get {
                return this.AdjustedMainlineClicksField;
            }
            set {
                if ((this.AdjustedMainlineClicksField.Equals(value) != true)) {
                    this.AdjustedMainlineClicksField = value;
                    this.RaisePropertyChanged("AdjustedMainlineClicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ClickYield {
            get {
                return this.ClickYieldField;
            }
            set {
                if ((this.ClickYieldField.Equals(value) != true)) {
                    this.ClickYieldField = value;
                    this.RaisePropertyChanged("ClickYield");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Clicks {
            get {
                return this.ClicksField;
            }
            set {
                if ((this.ClicksField.Equals(value) != true)) {
                    this.ClicksField = value;
                    this.RaisePropertyChanged("Clicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentName {
            get {
                return this.ExperimentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentNameField, value) != true)) {
                    this.ExperimentNameField = value;
                    this.RaisePropertyChanged("ExperimentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureAreaType {
            get {
                return this.FeatureAreaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureAreaTypeField, value) != true)) {
                    this.FeatureAreaTypeField = value;
                    this.RaisePropertyChanged("FeatureAreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((this.FlightNoField.Equals(value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossRevenueUSD {
            get {
                return this.GrossRevenueUSDField;
            }
            set {
                if ((this.GrossRevenueUSDField.Equals(value) != true)) {
                    this.GrossRevenueUSDField = value;
                    this.RaisePropertyChanged("GrossRevenueUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastRefreshed {
            get {
                return this.LastRefreshedField;
            }
            set {
                if ((this.LastRefreshedField.Equals(value) != true)) {
                    this.LastRefreshedField = value;
                    this.RaisePropertyChanged("LastRefreshed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MLCYContribution {
            get {
                return this.MLCYContributionField;
            }
            set {
                if ((this.MLCYContributionField.Equals(value) != true)) {
                    this.MLCYContributionField = value;
                    this.RaisePropertyChanged("MLCYContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MLCYControl {
            get {
                return this.MLCYControlField;
            }
            set {
                if ((this.MLCYControlField.Equals(value) != true)) {
                    this.MLCYControlField = value;
                    this.RaisePropertyChanged("MLCYControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MLCYDelta {
            get {
                return this.MLCYDeltaField;
            }
            set {
                if ((this.MLCYDeltaField.Equals(value) != true)) {
                    this.MLCYDeltaField = value;
                    this.RaisePropertyChanged("MLCYDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MainlineClicks {
            get {
                return this.MainlineClicksField;
            }
            set {
                if ((this.MainlineClicksField.Equals(value) != true)) {
                    this.MainlineClicksField = value;
                    this.RaisePropertyChanged("MainlineClicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Srpv {
            get {
                return this.SrpvField;
            }
            set {
                if ((this.SrpvField.Equals(value) != true)) {
                    this.SrpvField = value;
                    this.RaisePropertyChanged("Srpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSrpv {
            get {
                return this.TotalSrpvField;
            }
            set {
                if ((this.TotalSrpvField.Equals(value) != true)) {
                    this.TotalSrpvField = value;
                    this.RaisePropertyChanged("TotalSrpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrafficType {
            get {
                return this.TrafficTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrafficTypeField, value) != true)) {
                    this.TrafficTypeField = value;
                    this.RaisePropertyChanged("TrafficType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IYContributionData", Namespace="http://schemas.datacontract.org/2004/07/TrafficAllocation.Model.Entities")]
    public partial class IYContributionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AdjustedIYDeltaField;
        
        private double AdjustedImpressionsContributionField;
        
        private System.DateTime DateField;
        
        private string ExperimentNameField;
        
        private string FeatureAreaTypeField;
        
        private int FlightNoField;
        
        private double GrossRevenueUSDField;
        
        private double IYContributionField;
        
        private double IYControlField;
        
        private double IYDeltaField;
        
        private double ImpressionYieldField;
        
        private int ImpressionsField;
        
        private double ImpressionsContributionField;
        
        private System.DateTime LastRefreshedField;
        
        private int SrpvField;
        
        private double TotalSrpvField;
        
        private string TrafficTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedIYDelta {
            get {
                return this.AdjustedIYDeltaField;
            }
            set {
                if ((this.AdjustedIYDeltaField.Equals(value) != true)) {
                    this.AdjustedIYDeltaField = value;
                    this.RaisePropertyChanged("AdjustedIYDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedImpressionsContribution {
            get {
                return this.AdjustedImpressionsContributionField;
            }
            set {
                if ((this.AdjustedImpressionsContributionField.Equals(value) != true)) {
                    this.AdjustedImpressionsContributionField = value;
                    this.RaisePropertyChanged("AdjustedImpressionsContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentName {
            get {
                return this.ExperimentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentNameField, value) != true)) {
                    this.ExperimentNameField = value;
                    this.RaisePropertyChanged("ExperimentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureAreaType {
            get {
                return this.FeatureAreaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureAreaTypeField, value) != true)) {
                    this.FeatureAreaTypeField = value;
                    this.RaisePropertyChanged("FeatureAreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((this.FlightNoField.Equals(value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossRevenueUSD {
            get {
                return this.GrossRevenueUSDField;
            }
            set {
                if ((this.GrossRevenueUSDField.Equals(value) != true)) {
                    this.GrossRevenueUSDField = value;
                    this.RaisePropertyChanged("GrossRevenueUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double IYContribution {
            get {
                return this.IYContributionField;
            }
            set {
                if ((this.IYContributionField.Equals(value) != true)) {
                    this.IYContributionField = value;
                    this.RaisePropertyChanged("IYContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double IYControl {
            get {
                return this.IYControlField;
            }
            set {
                if ((this.IYControlField.Equals(value) != true)) {
                    this.IYControlField = value;
                    this.RaisePropertyChanged("IYControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double IYDelta {
            get {
                return this.IYDeltaField;
            }
            set {
                if ((this.IYDeltaField.Equals(value) != true)) {
                    this.IYDeltaField = value;
                    this.RaisePropertyChanged("IYDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImpressionYield {
            get {
                return this.ImpressionYieldField;
            }
            set {
                if ((this.ImpressionYieldField.Equals(value) != true)) {
                    this.ImpressionYieldField = value;
                    this.RaisePropertyChanged("ImpressionYield");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Impressions {
            get {
                return this.ImpressionsField;
            }
            set {
                if ((this.ImpressionsField.Equals(value) != true)) {
                    this.ImpressionsField = value;
                    this.RaisePropertyChanged("Impressions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ImpressionsContribution {
            get {
                return this.ImpressionsContributionField;
            }
            set {
                if ((this.ImpressionsContributionField.Equals(value) != true)) {
                    this.ImpressionsContributionField = value;
                    this.RaisePropertyChanged("ImpressionsContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastRefreshed {
            get {
                return this.LastRefreshedField;
            }
            set {
                if ((this.LastRefreshedField.Equals(value) != true)) {
                    this.LastRefreshedField = value;
                    this.RaisePropertyChanged("LastRefreshed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Srpv {
            get {
                return this.SrpvField;
            }
            set {
                if ((this.SrpvField.Equals(value) != true)) {
                    this.SrpvField = value;
                    this.RaisePropertyChanged("Srpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSrpv {
            get {
                return this.TotalSrpvField;
            }
            set {
                if ((this.TotalSrpvField.Equals(value) != true)) {
                    this.TotalSrpvField = value;
                    this.RaisePropertyChanged("TotalSrpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrafficType {
            get {
                return this.TrafficTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrafficTypeField, value) != true)) {
                    this.TrafficTypeField = value;
                    this.RaisePropertyChanged("TrafficType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CYContributionData", Namespace="http://schemas.datacontract.org/2004/07/TrafficAllocation.Model.Entities")]
    public partial class CYContributionData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AdjustedCYDeltaField;
        
        private double AdjustedClicksContributionField;
        
        private double CYContributionField;
        
        private double CYControlField;
        
        private double CYDeltaField;
        
        private double ClickYieldField;
        
        private int ClicksField;
        
        private double ClicksContributionField;
        
        private System.DateTime DateField;
        
        private string ExperimentNameField;
        
        private string FeatureAreaTypeField;
        
        private int FlightNoField;
        
        private double GrossRevenueUSDField;
        
        private System.DateTime LastRefreshedField;
        
        private int SrpvField;
        
        private double TotalSrpvField;
        
        private string TrafficTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedCYDelta {
            get {
                return this.AdjustedCYDeltaField;
            }
            set {
                if ((this.AdjustedCYDeltaField.Equals(value) != true)) {
                    this.AdjustedCYDeltaField = value;
                    this.RaisePropertyChanged("AdjustedCYDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AdjustedClicksContribution {
            get {
                return this.AdjustedClicksContributionField;
            }
            set {
                if ((this.AdjustedClicksContributionField.Equals(value) != true)) {
                    this.AdjustedClicksContributionField = value;
                    this.RaisePropertyChanged("AdjustedClicksContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CYContribution {
            get {
                return this.CYContributionField;
            }
            set {
                if ((this.CYContributionField.Equals(value) != true)) {
                    this.CYContributionField = value;
                    this.RaisePropertyChanged("CYContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CYControl {
            get {
                return this.CYControlField;
            }
            set {
                if ((this.CYControlField.Equals(value) != true)) {
                    this.CYControlField = value;
                    this.RaisePropertyChanged("CYControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CYDelta {
            get {
                return this.CYDeltaField;
            }
            set {
                if ((this.CYDeltaField.Equals(value) != true)) {
                    this.CYDeltaField = value;
                    this.RaisePropertyChanged("CYDelta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ClickYield {
            get {
                return this.ClickYieldField;
            }
            set {
                if ((this.ClickYieldField.Equals(value) != true)) {
                    this.ClickYieldField = value;
                    this.RaisePropertyChanged("ClickYield");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Clicks {
            get {
                return this.ClicksField;
            }
            set {
                if ((this.ClicksField.Equals(value) != true)) {
                    this.ClicksField = value;
                    this.RaisePropertyChanged("Clicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ClicksContribution {
            get {
                return this.ClicksContributionField;
            }
            set {
                if ((this.ClicksContributionField.Equals(value) != true)) {
                    this.ClicksContributionField = value;
                    this.RaisePropertyChanged("ClicksContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExperimentName {
            get {
                return this.ExperimentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExperimentNameField, value) != true)) {
                    this.ExperimentNameField = value;
                    this.RaisePropertyChanged("ExperimentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeatureAreaType {
            get {
                return this.FeatureAreaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeatureAreaTypeField, value) != true)) {
                    this.FeatureAreaTypeField = value;
                    this.RaisePropertyChanged("FeatureAreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((this.FlightNoField.Equals(value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossRevenueUSD {
            get {
                return this.GrossRevenueUSDField;
            }
            set {
                if ((this.GrossRevenueUSDField.Equals(value) != true)) {
                    this.GrossRevenueUSDField = value;
                    this.RaisePropertyChanged("GrossRevenueUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastRefreshed {
            get {
                return this.LastRefreshedField;
            }
            set {
                if ((this.LastRefreshedField.Equals(value) != true)) {
                    this.LastRefreshedField = value;
                    this.RaisePropertyChanged("LastRefreshed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Srpv {
            get {
                return this.SrpvField;
            }
            set {
                if ((this.SrpvField.Equals(value) != true)) {
                    this.SrpvField = value;
                    this.RaisePropertyChanged("Srpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalSrpv {
            get {
                return this.TotalSrpvField;
            }
            set {
                if ((this.TotalSrpvField.Equals(value) != true)) {
                    this.TotalSrpvField = value;
                    this.RaisePropertyChanged("TotalSrpv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrafficType {
            get {
                return this.TrafficTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrafficTypeField, value) != true)) {
                    this.TrafficTypeField = value;
                    this.RaisePropertyChanged("TrafficType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TrafficServiceReference.ITrafficService")]
    public interface ITrafficService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetNetworkViewSlices", ReplyAction="http://tempuri.org/ITrafficService/GetNetworkViewSlicesResponse")]
        System.IAsyncResult BeginGetNetworkViewSlices(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.NetworkViewSlicesData> EndGetNetworkViewSlices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetFlightCubeData", ReplyAction="http://tempuri.org/ITrafficService/GetFlightCubeDataResponse")]
        System.IAsyncResult BeginGetFlightCubeData(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.FlightCubeData> EndGetFlightCubeData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetCurrentViewData", ReplyAction="http://tempuri.org/ITrafficService/GetCurrentViewDataResponse")]
        System.IAsyncResult BeginGetCurrentViewData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CurrentViewData> EndGetCurrentViewData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetExperimentAllocationData", ReplyAction="http://tempuri.org/ITrafficService/GetExperimentAllocationDataResponse")]
        System.IAsyncResult BeginGetExperimentAllocationData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> EndGetExperimentAllocationData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetRPSContributionData", ReplyAction="http://tempuri.org/ITrafficService/GetRPSContributionDataResponse")]
        System.IAsyncResult BeginGetRPSContributionData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> EndGetRPSContributionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetMLIYContributionData", ReplyAction="http://tempuri.org/ITrafficService/GetMLIYContributionDataResponse")]
        System.IAsyncResult BeginGetMLIYContributionData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> EndGetMLIYContributionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetMLCYContributionData", ReplyAction="http://tempuri.org/ITrafficService/GetMLCYContributionDataResponse")]
        System.IAsyncResult BeginGetMLCYContributionData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLCYContributionData> EndGetMLCYContributionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetIYContributionData", ReplyAction="http://tempuri.org/ITrafficService/GetIYContributionDataResponse")]
        System.IAsyncResult BeginGetIYContributionData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.IYContributionData> EndGetIYContributionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetCYContributionData", ReplyAction="http://tempuri.org/ITrafficService/GetCYContributionDataResponse")]
        System.IAsyncResult BeginGetCYContributionData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> EndGetCYContributionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetNetworkExperimentAllocationData", ReplyAction="http://tempuri.org/ITrafficService/GetNetworkExperimentAllocationDataResponse")]
        System.IAsyncResult BeginGetNetworkExperimentAllocationData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> EndGetNetworkExperimentAllocationData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetNetworkRPSContributionData", ReplyAction="http://tempuri.org/ITrafficService/GetNetworkRPSContributionDataResponse")]
        System.IAsyncResult BeginGetNetworkRPSContributionData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> EndGetNetworkRPSContributionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetNetworkMLIYContributionData", ReplyAction="http://tempuri.org/ITrafficService/GetNetworkMLIYContributionDataResponse")]
        System.IAsyncResult BeginGetNetworkMLIYContributionData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> EndGetNetworkMLIYContributionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetNetworkCYContributionData", ReplyAction="http://tempuri.org/ITrafficService/GetNetworkCYContributionDataResponse")]
        System.IAsyncResult BeginGetNetworkCYContributionData(string selectedView, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> EndGetNetworkCYContributionData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/RefreshFlightCubeData", ReplyAction="http://tempuri.org/ITrafficService/RefreshFlightCubeDataResponse")]
        System.IAsyncResult BeginRefreshFlightCubeData(System.AsyncCallback callback, object asyncState);
        
        bool EndRefreshFlightCubeData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetDefaultView", ReplyAction="http://tempuri.org/ITrafficService/GetDefaultViewResponse")]
        System.IAsyncResult BeginGetDefaultView(System.AsyncCallback callback, object asyncState);
        
        string EndGetDefaultView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ITrafficService/GetFromAndTodays", ReplyAction="http://tempuri.org/ITrafficService/GetFromAndTodaysResponse")]
        System.IAsyncResult BeginGetFromAndTodays(System.AsyncCallback callback, object asyncState);
        
        string EndGetFromAndTodays(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrafficServiceChannel : TrafficAllocationDashboard.TrafficServiceReference.ITrafficService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkViewSlicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkViewSlicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.NetworkViewSlicesData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.NetworkViewSlicesData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlightCubeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlightCubeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.FlightCubeData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.FlightCubeData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentViewDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentViewDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CurrentViewData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CurrentViewData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExperimentAllocationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExperimentAllocationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRPSContributionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRPSContributionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMLIYContributionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMLIYContributionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMLCYContributionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMLCYContributionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLCYContributionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLCYContributionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIYContributionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIYContributionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.IYContributionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.IYContributionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCYContributionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCYContributionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkExperimentAllocationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkExperimentAllocationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkRPSContributionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkRPSContributionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkMLIYContributionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkMLIYContributionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNetworkCYContributionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNetworkCYContributionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RefreshFlightCubeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RefreshFlightCubeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDefaultViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDefaultViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFromAndTodaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFromAndTodaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrafficServiceClient : System.ServiceModel.ClientBase<TrafficAllocationDashboard.TrafficServiceReference.ITrafficService>, TrafficAllocationDashboard.TrafficServiceReference.ITrafficService {
        
        private BeginOperationDelegate onBeginGetNetworkViewSlicesDelegate;
        
        private EndOperationDelegate onEndGetNetworkViewSlicesDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkViewSlicesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlightCubeDataDelegate;
        
        private EndOperationDelegate onEndGetFlightCubeDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlightCubeDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentViewDataDelegate;
        
        private EndOperationDelegate onEndGetCurrentViewDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentViewDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExperimentAllocationDataDelegate;
        
        private EndOperationDelegate onEndGetExperimentAllocationDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetExperimentAllocationDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRPSContributionDataDelegate;
        
        private EndOperationDelegate onEndGetRPSContributionDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetRPSContributionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMLIYContributionDataDelegate;
        
        private EndOperationDelegate onEndGetMLIYContributionDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetMLIYContributionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMLCYContributionDataDelegate;
        
        private EndOperationDelegate onEndGetMLCYContributionDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetMLCYContributionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIYContributionDataDelegate;
        
        private EndOperationDelegate onEndGetIYContributionDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetIYContributionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCYContributionDataDelegate;
        
        private EndOperationDelegate onEndGetCYContributionDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetCYContributionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkExperimentAllocationDataDelegate;
        
        private EndOperationDelegate onEndGetNetworkExperimentAllocationDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkExperimentAllocationDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkRPSContributionDataDelegate;
        
        private EndOperationDelegate onEndGetNetworkRPSContributionDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkRPSContributionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkMLIYContributionDataDelegate;
        
        private EndOperationDelegate onEndGetNetworkMLIYContributionDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkMLIYContributionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNetworkCYContributionDataDelegate;
        
        private EndOperationDelegate onEndGetNetworkCYContributionDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetNetworkCYContributionDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginRefreshFlightCubeDataDelegate;
        
        private EndOperationDelegate onEndRefreshFlightCubeDataDelegate;
        
        private System.Threading.SendOrPostCallback onRefreshFlightCubeDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDefaultViewDelegate;
        
        private EndOperationDelegate onEndGetDefaultViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetDefaultViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFromAndTodaysDelegate;
        
        private EndOperationDelegate onEndGetFromAndTodaysDelegate;
        
        private System.Threading.SendOrPostCallback onGetFromAndTodaysCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TrafficServiceClient() {
        }
        
        public TrafficServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrafficServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrafficServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrafficServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetNetworkViewSlicesCompletedEventArgs> GetNetworkViewSlicesCompleted;
        
        public event System.EventHandler<GetFlightCubeDataCompletedEventArgs> GetFlightCubeDataCompleted;
        
        public event System.EventHandler<GetCurrentViewDataCompletedEventArgs> GetCurrentViewDataCompleted;
        
        public event System.EventHandler<GetExperimentAllocationDataCompletedEventArgs> GetExperimentAllocationDataCompleted;
        
        public event System.EventHandler<GetRPSContributionDataCompletedEventArgs> GetRPSContributionDataCompleted;
        
        public event System.EventHandler<GetMLIYContributionDataCompletedEventArgs> GetMLIYContributionDataCompleted;
        
        public event System.EventHandler<GetMLCYContributionDataCompletedEventArgs> GetMLCYContributionDataCompleted;
        
        public event System.EventHandler<GetIYContributionDataCompletedEventArgs> GetIYContributionDataCompleted;
        
        public event System.EventHandler<GetCYContributionDataCompletedEventArgs> GetCYContributionDataCompleted;
        
        public event System.EventHandler<GetNetworkExperimentAllocationDataCompletedEventArgs> GetNetworkExperimentAllocationDataCompleted;
        
        public event System.EventHandler<GetNetworkRPSContributionDataCompletedEventArgs> GetNetworkRPSContributionDataCompleted;
        
        public event System.EventHandler<GetNetworkMLIYContributionDataCompletedEventArgs> GetNetworkMLIYContributionDataCompleted;
        
        public event System.EventHandler<GetNetworkCYContributionDataCompletedEventArgs> GetNetworkCYContributionDataCompleted;
        
        public event System.EventHandler<RefreshFlightCubeDataCompletedEventArgs> RefreshFlightCubeDataCompleted;
        
        public event System.EventHandler<GetDefaultViewCompletedEventArgs> GetDefaultViewCompleted;
        
        public event System.EventHandler<GetFromAndTodaysCompletedEventArgs> GetFromAndTodaysCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetNetworkViewSlices(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkViewSlices(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.NetworkViewSlicesData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetNetworkViewSlices(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkViewSlices(result);
        }
        
        private System.IAsyncResult OnBeginGetNetworkViewSlices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetNetworkViewSlices(callback, asyncState);
        }
        
        private object[] OnEndGetNetworkViewSlices(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.NetworkViewSlicesData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetNetworkViewSlices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkViewSlicesCompleted(object state) {
            if ((this.GetNetworkViewSlicesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkViewSlicesCompleted(this, new GetNetworkViewSlicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkViewSlicesAsync() {
            this.GetNetworkViewSlicesAsync(null);
        }
        
        public void GetNetworkViewSlicesAsync(object userState) {
            if ((this.onBeginGetNetworkViewSlicesDelegate == null)) {
                this.onBeginGetNetworkViewSlicesDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkViewSlices);
            }
            if ((this.onEndGetNetworkViewSlicesDelegate == null)) {
                this.onEndGetNetworkViewSlicesDelegate = new EndOperationDelegate(this.OnEndGetNetworkViewSlices);
            }
            if ((this.onGetNetworkViewSlicesCompletedDelegate == null)) {
                this.onGetNetworkViewSlicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkViewSlicesCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkViewSlicesDelegate, null, this.onEndGetNetworkViewSlicesDelegate, this.onGetNetworkViewSlicesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetFlightCubeData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlightCubeData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.FlightCubeData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetFlightCubeData(System.IAsyncResult result) {
            return base.Channel.EndGetFlightCubeData(result);
        }
        
        private System.IAsyncResult OnBeginGetFlightCubeData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetFlightCubeData(callback, asyncState);
        }
        
        private object[] OnEndGetFlightCubeData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.FlightCubeData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetFlightCubeData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlightCubeDataCompleted(object state) {
            if ((this.GetFlightCubeDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlightCubeDataCompleted(this, new GetFlightCubeDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlightCubeDataAsync() {
            this.GetFlightCubeDataAsync(null);
        }
        
        public void GetFlightCubeDataAsync(object userState) {
            if ((this.onBeginGetFlightCubeDataDelegate == null)) {
                this.onBeginGetFlightCubeDataDelegate = new BeginOperationDelegate(this.OnBeginGetFlightCubeData);
            }
            if ((this.onEndGetFlightCubeDataDelegate == null)) {
                this.onEndGetFlightCubeDataDelegate = new EndOperationDelegate(this.OnEndGetFlightCubeData);
            }
            if ((this.onGetFlightCubeDataCompletedDelegate == null)) {
                this.onGetFlightCubeDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlightCubeDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlightCubeDataDelegate, null, this.onEndGetFlightCubeDataDelegate, this.onGetFlightCubeDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetCurrentViewData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentViewData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CurrentViewData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetCurrentViewData(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentViewData(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentViewData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetCurrentViewData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentViewData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CurrentViewData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetCurrentViewData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentViewDataCompleted(object state) {
            if ((this.GetCurrentViewDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentViewDataCompleted(this, new GetCurrentViewDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentViewDataAsync(string selectedView) {
            this.GetCurrentViewDataAsync(selectedView, null);
        }
        
        public void GetCurrentViewDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetCurrentViewDataDelegate == null)) {
                this.onBeginGetCurrentViewDataDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentViewData);
            }
            if ((this.onEndGetCurrentViewDataDelegate == null)) {
                this.onEndGetCurrentViewDataDelegate = new EndOperationDelegate(this.OnEndGetCurrentViewData);
            }
            if ((this.onGetCurrentViewDataCompletedDelegate == null)) {
                this.onGetCurrentViewDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentViewDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentViewDataDelegate, new object[] {
                        selectedView}, this.onEndGetCurrentViewDataDelegate, this.onGetCurrentViewDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetExperimentAllocationData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExperimentAllocationData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetExperimentAllocationData(System.IAsyncResult result) {
            return base.Channel.EndGetExperimentAllocationData(result);
        }
        
        private System.IAsyncResult OnBeginGetExperimentAllocationData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetExperimentAllocationData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetExperimentAllocationData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetExperimentAllocationData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExperimentAllocationDataCompleted(object state) {
            if ((this.GetExperimentAllocationDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExperimentAllocationDataCompleted(this, new GetExperimentAllocationDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExperimentAllocationDataAsync(string selectedView) {
            this.GetExperimentAllocationDataAsync(selectedView, null);
        }
        
        public void GetExperimentAllocationDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetExperimentAllocationDataDelegate == null)) {
                this.onBeginGetExperimentAllocationDataDelegate = new BeginOperationDelegate(this.OnBeginGetExperimentAllocationData);
            }
            if ((this.onEndGetExperimentAllocationDataDelegate == null)) {
                this.onEndGetExperimentAllocationDataDelegate = new EndOperationDelegate(this.OnEndGetExperimentAllocationData);
            }
            if ((this.onGetExperimentAllocationDataCompletedDelegate == null)) {
                this.onGetExperimentAllocationDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExperimentAllocationDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetExperimentAllocationDataDelegate, new object[] {
                        selectedView}, this.onEndGetExperimentAllocationDataDelegate, this.onGetExperimentAllocationDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetRPSContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRPSContributionData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetRPSContributionData(System.IAsyncResult result) {
            return base.Channel.EndGetRPSContributionData(result);
        }
        
        private System.IAsyncResult OnBeginGetRPSContributionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetRPSContributionData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetRPSContributionData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetRPSContributionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRPSContributionDataCompleted(object state) {
            if ((this.GetRPSContributionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRPSContributionDataCompleted(this, new GetRPSContributionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRPSContributionDataAsync(string selectedView) {
            this.GetRPSContributionDataAsync(selectedView, null);
        }
        
        public void GetRPSContributionDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetRPSContributionDataDelegate == null)) {
                this.onBeginGetRPSContributionDataDelegate = new BeginOperationDelegate(this.OnBeginGetRPSContributionData);
            }
            if ((this.onEndGetRPSContributionDataDelegate == null)) {
                this.onEndGetRPSContributionDataDelegate = new EndOperationDelegate(this.OnEndGetRPSContributionData);
            }
            if ((this.onGetRPSContributionDataCompletedDelegate == null)) {
                this.onGetRPSContributionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRPSContributionDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetRPSContributionDataDelegate, new object[] {
                        selectedView}, this.onEndGetRPSContributionDataDelegate, this.onGetRPSContributionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetMLIYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMLIYContributionData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetMLIYContributionData(System.IAsyncResult result) {
            return base.Channel.EndGetMLIYContributionData(result);
        }
        
        private System.IAsyncResult OnBeginGetMLIYContributionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetMLIYContributionData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetMLIYContributionData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetMLIYContributionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMLIYContributionDataCompleted(object state) {
            if ((this.GetMLIYContributionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMLIYContributionDataCompleted(this, new GetMLIYContributionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMLIYContributionDataAsync(string selectedView) {
            this.GetMLIYContributionDataAsync(selectedView, null);
        }
        
        public void GetMLIYContributionDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetMLIYContributionDataDelegate == null)) {
                this.onBeginGetMLIYContributionDataDelegate = new BeginOperationDelegate(this.OnBeginGetMLIYContributionData);
            }
            if ((this.onEndGetMLIYContributionDataDelegate == null)) {
                this.onEndGetMLIYContributionDataDelegate = new EndOperationDelegate(this.OnEndGetMLIYContributionData);
            }
            if ((this.onGetMLIYContributionDataCompletedDelegate == null)) {
                this.onGetMLIYContributionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMLIYContributionDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetMLIYContributionDataDelegate, new object[] {
                        selectedView}, this.onEndGetMLIYContributionDataDelegate, this.onGetMLIYContributionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetMLCYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMLCYContributionData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLCYContributionData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetMLCYContributionData(System.IAsyncResult result) {
            return base.Channel.EndGetMLCYContributionData(result);
        }
        
        private System.IAsyncResult OnBeginGetMLCYContributionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetMLCYContributionData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetMLCYContributionData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLCYContributionData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetMLCYContributionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMLCYContributionDataCompleted(object state) {
            if ((this.GetMLCYContributionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMLCYContributionDataCompleted(this, new GetMLCYContributionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMLCYContributionDataAsync(string selectedView) {
            this.GetMLCYContributionDataAsync(selectedView, null);
        }
        
        public void GetMLCYContributionDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetMLCYContributionDataDelegate == null)) {
                this.onBeginGetMLCYContributionDataDelegate = new BeginOperationDelegate(this.OnBeginGetMLCYContributionData);
            }
            if ((this.onEndGetMLCYContributionDataDelegate == null)) {
                this.onEndGetMLCYContributionDataDelegate = new EndOperationDelegate(this.OnEndGetMLCYContributionData);
            }
            if ((this.onGetMLCYContributionDataCompletedDelegate == null)) {
                this.onGetMLCYContributionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMLCYContributionDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetMLCYContributionDataDelegate, new object[] {
                        selectedView}, this.onEndGetMLCYContributionDataDelegate, this.onGetMLCYContributionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetIYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIYContributionData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.IYContributionData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetIYContributionData(System.IAsyncResult result) {
            return base.Channel.EndGetIYContributionData(result);
        }
        
        private System.IAsyncResult OnBeginGetIYContributionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetIYContributionData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetIYContributionData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.IYContributionData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetIYContributionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIYContributionDataCompleted(object state) {
            if ((this.GetIYContributionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIYContributionDataCompleted(this, new GetIYContributionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIYContributionDataAsync(string selectedView) {
            this.GetIYContributionDataAsync(selectedView, null);
        }
        
        public void GetIYContributionDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetIYContributionDataDelegate == null)) {
                this.onBeginGetIYContributionDataDelegate = new BeginOperationDelegate(this.OnBeginGetIYContributionData);
            }
            if ((this.onEndGetIYContributionDataDelegate == null)) {
                this.onEndGetIYContributionDataDelegate = new EndOperationDelegate(this.OnEndGetIYContributionData);
            }
            if ((this.onGetIYContributionDataCompletedDelegate == null)) {
                this.onGetIYContributionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIYContributionDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetIYContributionDataDelegate, new object[] {
                        selectedView}, this.onEndGetIYContributionDataDelegate, this.onGetIYContributionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetCYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCYContributionData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetCYContributionData(System.IAsyncResult result) {
            return base.Channel.EndGetCYContributionData(result);
        }
        
        private System.IAsyncResult OnBeginGetCYContributionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetCYContributionData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetCYContributionData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetCYContributionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCYContributionDataCompleted(object state) {
            if ((this.GetCYContributionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCYContributionDataCompleted(this, new GetCYContributionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCYContributionDataAsync(string selectedView) {
            this.GetCYContributionDataAsync(selectedView, null);
        }
        
        public void GetCYContributionDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetCYContributionDataDelegate == null)) {
                this.onBeginGetCYContributionDataDelegate = new BeginOperationDelegate(this.OnBeginGetCYContributionData);
            }
            if ((this.onEndGetCYContributionDataDelegate == null)) {
                this.onEndGetCYContributionDataDelegate = new EndOperationDelegate(this.OnEndGetCYContributionData);
            }
            if ((this.onGetCYContributionDataCompletedDelegate == null)) {
                this.onGetCYContributionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCYContributionDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetCYContributionDataDelegate, new object[] {
                        selectedView}, this.onEndGetCYContributionDataDelegate, this.onGetCYContributionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetNetworkExperimentAllocationData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkExperimentAllocationData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetNetworkExperimentAllocationData(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkExperimentAllocationData(result);
        }
        
        private System.IAsyncResult OnBeginGetNetworkExperimentAllocationData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetNetworkExperimentAllocationData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetNetworkExperimentAllocationData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetNetworkExperimentAllocationData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkExperimentAllocationDataCompleted(object state) {
            if ((this.GetNetworkExperimentAllocationDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkExperimentAllocationDataCompleted(this, new GetNetworkExperimentAllocationDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkExperimentAllocationDataAsync(string selectedView) {
            this.GetNetworkExperimentAllocationDataAsync(selectedView, null);
        }
        
        public void GetNetworkExperimentAllocationDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetNetworkExperimentAllocationDataDelegate == null)) {
                this.onBeginGetNetworkExperimentAllocationDataDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkExperimentAllocationData);
            }
            if ((this.onEndGetNetworkExperimentAllocationDataDelegate == null)) {
                this.onEndGetNetworkExperimentAllocationDataDelegate = new EndOperationDelegate(this.OnEndGetNetworkExperimentAllocationData);
            }
            if ((this.onGetNetworkExperimentAllocationDataCompletedDelegate == null)) {
                this.onGetNetworkExperimentAllocationDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkExperimentAllocationDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkExperimentAllocationDataDelegate, new object[] {
                        selectedView}, this.onEndGetNetworkExperimentAllocationDataDelegate, this.onGetNetworkExperimentAllocationDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetNetworkRPSContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkRPSContributionData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetNetworkRPSContributionData(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkRPSContributionData(result);
        }
        
        private System.IAsyncResult OnBeginGetNetworkRPSContributionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetNetworkRPSContributionData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetNetworkRPSContributionData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetNetworkRPSContributionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkRPSContributionDataCompleted(object state) {
            if ((this.GetNetworkRPSContributionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkRPSContributionDataCompleted(this, new GetNetworkRPSContributionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkRPSContributionDataAsync(string selectedView) {
            this.GetNetworkRPSContributionDataAsync(selectedView, null);
        }
        
        public void GetNetworkRPSContributionDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetNetworkRPSContributionDataDelegate == null)) {
                this.onBeginGetNetworkRPSContributionDataDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkRPSContributionData);
            }
            if ((this.onEndGetNetworkRPSContributionDataDelegate == null)) {
                this.onEndGetNetworkRPSContributionDataDelegate = new EndOperationDelegate(this.OnEndGetNetworkRPSContributionData);
            }
            if ((this.onGetNetworkRPSContributionDataCompletedDelegate == null)) {
                this.onGetNetworkRPSContributionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkRPSContributionDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkRPSContributionDataDelegate, new object[] {
                        selectedView}, this.onEndGetNetworkRPSContributionDataDelegate, this.onGetNetworkRPSContributionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetNetworkMLIYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkMLIYContributionData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetNetworkMLIYContributionData(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkMLIYContributionData(result);
        }
        
        private System.IAsyncResult OnBeginGetNetworkMLIYContributionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetNetworkMLIYContributionData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetNetworkMLIYContributionData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetNetworkMLIYContributionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkMLIYContributionDataCompleted(object state) {
            if ((this.GetNetworkMLIYContributionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkMLIYContributionDataCompleted(this, new GetNetworkMLIYContributionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkMLIYContributionDataAsync(string selectedView) {
            this.GetNetworkMLIYContributionDataAsync(selectedView, null);
        }
        
        public void GetNetworkMLIYContributionDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetNetworkMLIYContributionDataDelegate == null)) {
                this.onBeginGetNetworkMLIYContributionDataDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkMLIYContributionData);
            }
            if ((this.onEndGetNetworkMLIYContributionDataDelegate == null)) {
                this.onEndGetNetworkMLIYContributionDataDelegate = new EndOperationDelegate(this.OnEndGetNetworkMLIYContributionData);
            }
            if ((this.onGetNetworkMLIYContributionDataCompletedDelegate == null)) {
                this.onGetNetworkMLIYContributionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkMLIYContributionDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkMLIYContributionDataDelegate, new object[] {
                        selectedView}, this.onEndGetNetworkMLIYContributionDataDelegate, this.onGetNetworkMLIYContributionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetNetworkCYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNetworkCYContributionData(selectedView, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetNetworkCYContributionData(System.IAsyncResult result) {
            return base.Channel.EndGetNetworkCYContributionData(result);
        }
        
        private System.IAsyncResult OnBeginGetNetworkCYContributionData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedView = ((string)(inValues[0]));
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetNetworkCYContributionData(selectedView, callback, asyncState);
        }
        
        private object[] OnEndGetNetworkCYContributionData(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetNetworkCYContributionData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNetworkCYContributionDataCompleted(object state) {
            if ((this.GetNetworkCYContributionDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNetworkCYContributionDataCompleted(this, new GetNetworkCYContributionDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNetworkCYContributionDataAsync(string selectedView) {
            this.GetNetworkCYContributionDataAsync(selectedView, null);
        }
        
        public void GetNetworkCYContributionDataAsync(string selectedView, object userState) {
            if ((this.onBeginGetNetworkCYContributionDataDelegate == null)) {
                this.onBeginGetNetworkCYContributionDataDelegate = new BeginOperationDelegate(this.OnBeginGetNetworkCYContributionData);
            }
            if ((this.onEndGetNetworkCYContributionDataDelegate == null)) {
                this.onEndGetNetworkCYContributionDataDelegate = new EndOperationDelegate(this.OnEndGetNetworkCYContributionData);
            }
            if ((this.onGetNetworkCYContributionDataCompletedDelegate == null)) {
                this.onGetNetworkCYContributionDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNetworkCYContributionDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetNetworkCYContributionDataDelegate, new object[] {
                        selectedView}, this.onEndGetNetworkCYContributionDataDelegate, this.onGetNetworkCYContributionDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginRefreshFlightCubeData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRefreshFlightCubeData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndRefreshFlightCubeData(System.IAsyncResult result) {
            return base.Channel.EndRefreshFlightCubeData(result);
        }
        
        private System.IAsyncResult OnBeginRefreshFlightCubeData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginRefreshFlightCubeData(callback, asyncState);
        }
        
        private object[] OnEndRefreshFlightCubeData(System.IAsyncResult result) {
            bool retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndRefreshFlightCubeData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRefreshFlightCubeDataCompleted(object state) {
            if ((this.RefreshFlightCubeDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RefreshFlightCubeDataCompleted(this, new RefreshFlightCubeDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RefreshFlightCubeDataAsync() {
            this.RefreshFlightCubeDataAsync(null);
        }
        
        public void RefreshFlightCubeDataAsync(object userState) {
            if ((this.onBeginRefreshFlightCubeDataDelegate == null)) {
                this.onBeginRefreshFlightCubeDataDelegate = new BeginOperationDelegate(this.OnBeginRefreshFlightCubeData);
            }
            if ((this.onEndRefreshFlightCubeDataDelegate == null)) {
                this.onEndRefreshFlightCubeDataDelegate = new EndOperationDelegate(this.OnEndRefreshFlightCubeData);
            }
            if ((this.onRefreshFlightCubeDataCompletedDelegate == null)) {
                this.onRefreshFlightCubeDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRefreshFlightCubeDataCompleted);
            }
            base.InvokeAsync(this.onBeginRefreshFlightCubeDataDelegate, null, this.onEndRefreshFlightCubeDataDelegate, this.onRefreshFlightCubeDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetDefaultView(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDefaultView(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetDefaultView(System.IAsyncResult result) {
            return base.Channel.EndGetDefaultView(result);
        }
        
        private System.IAsyncResult OnBeginGetDefaultView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetDefaultView(callback, asyncState);
        }
        
        private object[] OnEndGetDefaultView(System.IAsyncResult result) {
            string retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetDefaultView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDefaultViewCompleted(object state) {
            if ((this.GetDefaultViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDefaultViewCompleted(this, new GetDefaultViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDefaultViewAsync() {
            this.GetDefaultViewAsync(null);
        }
        
        public void GetDefaultViewAsync(object userState) {
            if ((this.onBeginGetDefaultViewDelegate == null)) {
                this.onBeginGetDefaultViewDelegate = new BeginOperationDelegate(this.OnBeginGetDefaultView);
            }
            if ((this.onEndGetDefaultViewDelegate == null)) {
                this.onEndGetDefaultViewDelegate = new EndOperationDelegate(this.OnEndGetDefaultView);
            }
            if ((this.onGetDefaultViewCompletedDelegate == null)) {
                this.onGetDefaultViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDefaultViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetDefaultViewDelegate, null, this.onEndGetDefaultViewDelegate, this.onGetDefaultViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.BeginGetFromAndTodays(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFromAndTodays(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string TrafficAllocationDashboard.TrafficServiceReference.ITrafficService.EndGetFromAndTodays(System.IAsyncResult result) {
            return base.Channel.EndGetFromAndTodays(result);
        }
        
        private System.IAsyncResult OnBeginGetFromAndTodays(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).BeginGetFromAndTodays(callback, asyncState);
        }
        
        private object[] OnEndGetFromAndTodays(System.IAsyncResult result) {
            string retVal = ((TrafficAllocationDashboard.TrafficServiceReference.ITrafficService)(this)).EndGetFromAndTodays(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFromAndTodaysCompleted(object state) {
            if ((this.GetFromAndTodaysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFromAndTodaysCompleted(this, new GetFromAndTodaysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFromAndTodaysAsync() {
            this.GetFromAndTodaysAsync(null);
        }
        
        public void GetFromAndTodaysAsync(object userState) {
            if ((this.onBeginGetFromAndTodaysDelegate == null)) {
                this.onBeginGetFromAndTodaysDelegate = new BeginOperationDelegate(this.OnBeginGetFromAndTodays);
            }
            if ((this.onEndGetFromAndTodaysDelegate == null)) {
                this.onEndGetFromAndTodaysDelegate = new EndOperationDelegate(this.OnEndGetFromAndTodays);
            }
            if ((this.onGetFromAndTodaysCompletedDelegate == null)) {
                this.onGetFromAndTodaysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFromAndTodaysCompleted);
            }
            base.InvokeAsync(this.onBeginGetFromAndTodaysDelegate, null, this.onEndGetFromAndTodaysDelegate, this.onGetFromAndTodaysCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TrafficAllocationDashboard.TrafficServiceReference.ITrafficService CreateChannel() {
            return new TrafficServiceClientChannel(this);
        }
        
        private class TrafficServiceClientChannel : ChannelBase<TrafficAllocationDashboard.TrafficServiceReference.ITrafficService>, TrafficAllocationDashboard.TrafficServiceReference.ITrafficService {
            
            public TrafficServiceClientChannel(System.ServiceModel.ClientBase<TrafficAllocationDashboard.TrafficServiceReference.ITrafficService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetNetworkViewSlices(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNetworkViewSlices", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.NetworkViewSlicesData> EndGetNetworkViewSlices(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.NetworkViewSlicesData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.NetworkViewSlicesData>)(base.EndInvoke("GetNetworkViewSlices", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFlightCubeData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFlightCubeData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.FlightCubeData> EndGetFlightCubeData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.FlightCubeData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.FlightCubeData>)(base.EndInvoke("GetFlightCubeData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCurrentViewData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentViewData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CurrentViewData> EndGetCurrentViewData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CurrentViewData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CurrentViewData>)(base.EndInvoke("GetCurrentViewData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetExperimentAllocationData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetExperimentAllocationData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> EndGetExperimentAllocationData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData>)(base.EndInvoke("GetExperimentAllocationData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRPSContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetRPSContributionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> EndGetRPSContributionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData>)(base.EndInvoke("GetRPSContributionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMLIYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetMLIYContributionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> EndGetMLIYContributionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData>)(base.EndInvoke("GetMLIYContributionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMLCYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetMLCYContributionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLCYContributionData> EndGetMLCYContributionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLCYContributionData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLCYContributionData>)(base.EndInvoke("GetMLCYContributionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetIYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetIYContributionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.IYContributionData> EndGetIYContributionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.IYContributionData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.IYContributionData>)(base.EndInvoke("GetIYContributionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetCYContributionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> EndGetCYContributionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData>)(base.EndInvoke("GetCYContributionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNetworkExperimentAllocationData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetNetworkExperimentAllocationData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> EndGetNetworkExperimentAllocationData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.ExperimentAllocationData>)(base.EndInvoke("GetNetworkExperimentAllocationData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNetworkRPSContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetNetworkRPSContributionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> EndGetNetworkRPSContributionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.RPSContributionData>)(base.EndInvoke("GetNetworkRPSContributionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNetworkMLIYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetNetworkMLIYContributionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> EndGetNetworkMLIYContributionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.MLIYContributionData>)(base.EndInvoke("GetNetworkMLIYContributionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNetworkCYContributionData(string selectedView, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedView;
                System.IAsyncResult _result = base.BeginInvoke("GetNetworkCYContributionData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> EndGetNetworkCYContributionData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData> _result = ((System.Collections.ObjectModel.ObservableCollection<TrafficAllocationDashboard.TrafficServiceReference.CYContributionData>)(base.EndInvoke("GetNetworkCYContributionData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRefreshFlightCubeData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RefreshFlightCubeData", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRefreshFlightCubeData(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RefreshFlightCubeData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDefaultView(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDefaultView", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetDefaultView(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetDefaultView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFromAndTodays(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFromAndTodays", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetFromAndTodays(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetFromAndTodays", _args, result)));
                return _result;
            }
        }
    }
}
